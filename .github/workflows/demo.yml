name: Demo action

# on: [push]
on: 
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Build the application with node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - run: |
          npm i
          npm run build
          # docker build . -t ghcr.io/everdreamsoft/sample:latest

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Remote ssh deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EDGE_ADDRESS }}
          username: ${{ secrets.EDGE_USERNAME }}
          password: ${{ secrets.EDGE_PASSWORD }}
          port: ${{ secrets.EDGE_PORT }}
          script: |
            ls
            docker pull ghcr.io/everdreamsoft/sample:latest